substitutions:
    _CLUSTER_NAME: kind-cluster-demo2
timeout: 2100s
steps:
  - name: 'cggaldes/gcp-config-connector:docker'
    entrypoint: /bin/sh
    args: ['-c', 'kind create cluster --name=${_CLUSTER_NAME} --config multi-node-cluster.yaml']
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          kind get kubeconfig --name=${_CLUSTER_NAME} > /tmp/${_CLUSTER_NAME}-config.yaml
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          kubectl get nodes -o wide
  - name: cggaldes/gcloud
    entrypoint: /bin/sh
    args: ['-c', 'make gcp.create_cnrm_sa_key']
  - name: cggaldes/gsutil
    entrypoint: /bin/sh
    args: ['-c', 'make kcc.download']
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          # export KUBECONFIG file
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          # Deploy K8S namespaces
          make kcc.ns_deploy
          # Deploy KCC GCP Identity to kind cluster
          make kcc.deploy
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          # export KUBECONFIG file
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          # display kcc logs
          make kcc.show_logs
          # show pods in cnrm namespace
          make kcc.show_pods
          # validate 
          kubectl describe po cnrm-controller-manager-0 -n cnrm-system
          # list available crds
          make kcc.list_specific_resource_crd
    timeout: 420s
  - name: 'ubuntu'
    args: ['sleep', '200']
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          # export KUBECONFIG file
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          kubectl describe po cnrm-controller-manager-0 -n cnrm-system
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          # export KUBECONFIG file
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          make kcc.show_pods
          # deploy SharedServices infrastructure
          make app.demo2.deploy
          kubectl get all -n chris-galdes-contino-project
          sleep 20
          kubectl logs cnrm-controller-manager-0 -n cnrm-system
    timeout: 500s
  - name: 'ubuntu'
    args: ['sleep', '500']
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          # export KUBECONFIG file
          export KUBECONFIG=/tmp/${_CLUSTER_NAME}-config.yaml
          # delete infrastructure
          ACTION=delete make app.demo2.deploy
  - name: 'ubuntu'
    args: ['sleep', '120']
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - run
      - --entrypoint=/bin/sh
      - --net=host
      - --volume=/var/run/docker.sock:/var/run/docker.sock
      - --volume=/workspace:/workspace
      - --volume=/tmp:/tmp
      - --workdir=/workspace
      - cggaldes/gcp-config-connector:docker
      - -c
      - | 
          rm /tmp/${_CLUSTER_NAME}-config.yaml